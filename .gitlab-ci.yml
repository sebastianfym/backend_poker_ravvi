image: cr.yandex/crpa15giodgbluup12vl/ci_python:latest

stages:
  - build
  - test
  - docker
  - deploy

variables:
  PIP_CACHE_DIR: "/home/ravvi/.cache/pip"
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  CONTAINER_REGISTRY_PATH: cr.yandex/crpa15giodgbluup12vl
  IMAGE_NAME: poker_backend
  IMAGE_PATH: ${CONTAINER_REGISTRY_PATH}/${IMAGE_NAME}

build_py:
  stage: build
  rules:
    - if: $CI_COMMIT_BRANCH
  cache:
    paths:
      - ${PIP_CACHE_DIR}
  before_script:
    - source ~/.profile
  script:
    - python3 ./setup.py bdist_wheel
  artifacts:
    paths:
      - dist/

test_py:
  stage: test
  rules:
    - if: $CI_COMMIT_BRANCH
  needs:
    - build_py
  cache:
    paths:
      - ${PIP_CACHE_DIR}
  services:
    - postgres:15.2
  variables:
    POSTGRES_PASSWORD: password
    RAVVI_POKER_DB_HOST: postgres
    RAVVI_POKER_DB_PORT: 5432
    RAVVI_POKER_DB_USER: postgres
    RAVVI_POKER_DB_PASSWORD: ${POSTGRES_PASSWORD}
    RAVVI_POKER_DB_NAME: test_ci
  before_script:
    - source ~/.profile
  script:
    - pip3 install -f ./dist ravvi-poker[tests]
    - cd tests/
    # init tests database
    - coverage erase
    - coverage run --append ~/.local/bin/ravvi_poker_db create ${RAVVI_POKER_DB_NAME}
    - coverage run --append ~/.local/bin/ravvi_poker_db deploy ${RAVVI_POKER_DB_NAME}
    # run tests
    - coverage run --append -m pytest --junitxml=tests.xml .
    # coverage info
    - coverage report
    - coverage xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    when: always
    reports:
      junit: tests/tests.xml
      coverage_report:
        coverage_format: cobertura
        path: tests/coverage.xml

docker_build:
  stage: docker
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
  needs:
    - build_py
    - test_py
  image: docker:23.0.3
  services:
    - name: docker:23.0.3-dind
  script:
    # build
    - docker build -t ${IMAGE_PATH}:develop .
    # push
    - docker push ${IMAGE_PATH}:develop
    # cleanup
    - docker image rmi ${IMAGE_PATH}:develop

deploy_dev:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == 'develop'
      when: manual
  environment: develop
  needs:
    - build_docker
  before_script:
    - eval $(ssh-agent -s)
    - echo "${POKER_DEV_SSH_KEY}" | tr -d '\r' | ssh-add -
  script:
    - ssh -o StrictHostKeyChecking=no ${POKER_DEV_HOST} '~/bin/deploy.sh'
